diff --git a/samples/deeplearning/mlpdriver/mlp_example_f32.c b/samples/deeplearning/mlpdriver/mlp_example_f32.c
index db62e8e1c..9dd03270e 100644
--- a/samples/deeplearning/mlpdriver/mlp_example_f32.c
+++ b/samples/deeplearning/mlpdriver/mlp_example_f32.c
@@ -21,6 +21,10 @@
 /* include c-based dnn library */
 #include "../common/dnn_common.h"
 
+#ifdef GEM5
+#include "gem5/m5ops.h"
+#endif
+
 #define CHKERR_LIBXSMM_DNN(A) { const int chkerr_libxsmm_dnn_ = A; if (LIBXSMM_DNN_SUCCESS != chkerr_libxsmm_dnn_) { \
   fprintf(stderr, "%s\n", libxsmm_dnn_get_error(chkerr_libxsmm_dnn_)); global_status = chkerr_libxsmm_dnn_; } \
 }
@@ -378,10 +382,43 @@ int main(int argc, char* argv[])
   }
   CHKERR_LIBXSMM_DNN( libxsmm_dnn_softmaxloss_bind_scratch(    libxsmm_softmax,     scratch ) );
 
+#ifdef GEM5
+    m5_switch_cpu();
+
+  if (iters <= 1) {
+      printf("Iteration should be more than 1 for gem5 simulation. (The first"
+             " iteration is used for cache warmed up.)\n");
+      return 0;
+  }
+#endif
+
   if (type == 'A' || type == 'F') {
     printf("##########################################\n");
     printf("#   Performance - FWD (custom-Storage)   #\n");
     printf("##########################################\n");
+
+#ifdef GEM5
+    printf("Warming up cache ...\n");
+#if defined(_OPENMP)
+#   pragma omp parallel private(i)
+#endif
+    {
+#if defined(_OPENMP)
+      const int tid = omp_get_thread_num();
+#else
+      const int tid = 0;
+#endif
+      for ( i = 0; i < num_layers; ++i) {
+          CHKERR_LIBXSMM_DNN( libxsmm_dnn_fullyconnected_execute_st( libxsmm_fc_layer[i], LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid ) );
+      }
+      CHKERR_LIBXSMM_DNN( libxsmm_dnn_softmaxloss_execute_st( libxsmm_softmax, LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid ) );
+    }
+    printf("Cache warmed up.\n");
+#endif // GEM5
+
+#ifdef GEM5
+    m5_reset_stats(0, 0);
+#endif
     l_start = libxsmm_timer_tick();
 #if defined(_OPENMP)
 #   pragma omp parallel private(i,j)
@@ -392,11 +429,15 @@ int main(int argc, char* argv[])
 #else
       const int tid = 0;
 #endif
+#ifdef GEM5
+      for (j = 0; j < iters-1; ++j) {
+#else
       for (j = 0; j < iters; ++j) {
+#endif
         for ( i = 0; i < num_layers; ++i) {
-          libxsmm_dnn_fullyconnected_execute_st( libxsmm_fc_layer[i], LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid );
+          CHKERR_LIBXSMM_DNN( libxsmm_dnn_fullyconnected_execute_st( libxsmm_fc_layer[i], LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid ) );
         }
-        libxsmm_dnn_softmaxloss_execute_st( libxsmm_softmax, LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid );
+        CHKERR_LIBXSMM_DNN( libxsmm_dnn_softmaxloss_execute_st( libxsmm_softmax, LIBXSMM_DNN_COMPUTE_KIND_FWD, 0, tid ) );
       }
     }
     l_end = libxsmm_timer_tick();
@@ -416,6 +457,11 @@ int main(int argc, char* argv[])
     printf("%f,%f\n", ((double)(l_total/iters)), gflop/l_total);
   }
 
+#ifdef GEM5
+    m5_dump_reset_stats(0, 0);
+    exit(0);
+#endif
+
   if (type == 'A' || type == 'B') {
     printf("##########################################\n");
     printf("#   Performance - BWD (custom-Storage)   #\n");
